
<div class="alert alert-primary" role="alert">
    <h2><strong><i class="fa-solid fa-hospital-user"></i> List Patients</strong></h2>
</div>

<a asp-action="Create" id="addCustomer" asp-controller="Patient" class="btn btn-success text-white" style="margin-bottom:10px"><i class="fa-solid fa-hospital-user"></i> New Patient</a>
<table id="Patienttable" class="table table-striped table-bordered" width="100%">
    <thead>
        <tr>
            <th>Id</th>
            <th>FullName</th>
            <th>DateOfBirth</th>
            <th>EmailAddress</th>
            <th>PhoneNumber</th>
            <th>Gender</th>
            <th> </th>
        </tr>
    </thead>
</table>

<link href="~/lib/datatable/datatables-1.12.1/css/datatables.bootstrap5.min.css" rel="stylesheet" />

@section scripts{
        <script type="text/javascript" charset="utf8" src="https://code.jquery.com/jquery-3.5.1.js"></script>
        <script src="~/lib/datatable/datatables-1.12.1/js/jquery.datatables.min.js"></script>
        <script src="~/lib/datatable/datatables-1.12.1/js/datatables.bootstrap5.min.js"></script>
        <script>
            var Popup, datatable, IdPatient = parseInt('@ViewBag.Patient_Id'), IdWard = parseInt('@ViewBag.Ward_Id')
            $(document).ready(function () {
                datatable = $("#Patienttable").DataTable({
                    "ajax": {
                    "url": "/Patient/GetPatientData",
                        "type": "GET",
                        "datatype": "json"
                    },
                    "columns": [

                        { "data": "id" },
                        {
                            "data": "fullName",
                            "width": "170px",
                            "render": function (data, type, row, meta) {
                                return '<b><a href="/Patient/Details/' + row.id + '">' + data + '</b></a>';
                            }
                        },
                        {
                            "data": "date_Of_Birth",
                            "render": dateFormatter
                        },
                    { "data": "patient_mailAddress" },
                    { "data": "cell_Mobile_phone" },
                        { "data": "gender", "render": Genderparse },
                        {
                            "data": "id", "render": function (data) {
                                return "<a class= 'btn btn-primary btn-sm text-white' onclick=location.href='@Url.Action("Edit","Patient")/" + data + "'><i class='fas fa-pencil'></i><b> Edit</b></a>" + "\r\n" +
                                    "<a class= 'btn btn-danger btn-sm text-white' style = 'margin-left:5px' onclick =location.href='@Url.Action("Delete","Patient")/" + data + "' > <i class='fa-solid fa-trash-can' > </i><b> Delete</b > </a> " + "\r\n" +
                                    "<a class= 'btn btn-info btn-sm' style='margin-left:5px' onclick=location.href='@Url.Action("Edit", "Addresses")?PatientId=" + data + "'><i class='fas fa-address-card'></i><b> Address</b> </a> "+ "\r\n" +
                                    "<a class= 'btn btn-info btn-sm' style='margin-left:5px' onclick=location.href='@Url.Action("List", "Appointment")?PatientId=" + data + "'><i class='fa-solid fa-prescription-bottle-medical'></i><b> Appoint.</b> </a>"+ "\r\n" +
                                "<a class= 'btn btn-success btn-sm' style='margin-left:5px' onclick=location.href='@Url.Action("StaffsperPatientList", "StaffPatientAssociation")?PatientId=" + data + "'><i class='fa-solid fa-user-doctor'></i><b> =>Staff</b> </a>" + "\r\n" +
                                    "<a class= 'btn btn-info btn-sm' style='margin-left:5px' onclick=location.href='@Url.Action("RecordperPatientList", "PatientRecord")?PatientId=" + data + "'><i class='fa-solid fa-prescription-bottle-medical'></i><b> Records</b> </a>  ";

                            },
                            "orderable": false,
                            "searchable": false,
                            "width": "780px"
                        }

                    ],
                    "language": {

                        "emptyTable": "No data Found, Please Click On <b>Add New</b> Button"
                    }

                });

            });







            function dateFormatter(data) {
                var dateAsString = data;

                var yearNumber = dateAsString.substring(0, 4);
                var monthNumber = dateAsString.substring(5, 7);
                var dayNumber = dateAsString.substring(8, 10);
                var dat = dayNumber + "/" + monthNumber + "/" + yearNumber;
                return dat;
            }

            function Genderparse(data) {
                var gnder;
                switch (data) {
                    case 1:
                        gnder = "Male"
                        break;
                    case 2:
                        gnder = "Female"
                        break;
                    default:
                    // code block
                }
                return gnder;
            }

        </script>
    }

